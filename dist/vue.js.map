{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/watcher.js","../src/vnode/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["\r\nlet oldArrayProto = Array.prototype\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n\r\nmethods.forEach(method =>{\r\n  newArrayProto[method] = function(...args) { // 这里重写了数组的方法\r\n    // 内部调用原来的方法\r\n    const result =  oldArrayProto[method].call(this, ...args)\r\n    console.log('arrayMethos', method)\r\n\r\n    // 我们需要对新增的数据再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice': \r\n        inserted = args.slice(2)\r\n      default:\r\n        break;\r\n    }\r\n\r\n    console.log('数组新增的内容', inserted)\r\n    // 如果数组新增的数据是对象类型，那么就重新进行劫持\r\n    if(inserted) {\r\n      ob.observeArray(inserted)\r\n    }\r\n\r\n    return result\r\n  }\r\n})","let id = 0\r\n\r\nclass Dep {\r\n  constructor() {\r\n    this.id = id++ //属性的dep要收集watcher\r\n    this.subs = [] //这里存放着当前属性对应的watcher有哪些\r\n  }\r\n  depend() {\r\n    // 这里我们不希望放重复的watcher，而且 dep -> watcher只是一个单向的关系\r\n    // 还需要 watcher记录dep addSub()\r\n    // 这里的Dep.target就是当前的watcher\r\n    // this.subs.push(watcher) 放在这里会有重复的问题\r\n    Dep.target.addDep(this)\r\n\r\n    // dep和watcher是多对多的关系（一个属性可以在多个组件中使用 dep -> watcher）\r\n    // 一个组件由多个属性组成 （一个watcher对应多个dep）\r\n  }\r\n\r\n  addSub(watcher) {\r\n    this.subs.push(watcher)\r\n  }\r\n\r\n  notify() {\r\n    this.subs.forEach((watcher) => watcher.update())\r\n  }\r\n}\r\n\r\nDep.target = null\r\n\r\nexport default Dep\r\n","import { newArrayProto } from './array'\r\nimport Dep from './dep'\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    // Object.defineProperty只能劫持已经存在的属性，新增删除的属性并不能劫持到\r\n    // 对此，vue2里面会单独进行处理 $set $delete\r\n\r\n    data.__ob__ = this // 给数据加了一个标识，如果数据上有__ob__，则说明这个属性被观测过\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false, // 将 __ob__ 变成不可枚举（循环的时候无法获取到）\r\n    })\r\n    if (Array.isArray(data)) {\r\n      data.__proto__ = newArrayProto\r\n      this.observeArray(data) // 如果数组中放的是对象，可以监控到对象的变化\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n\r\n  // 循环对象，对属性依此进行劫持\r\n  walk(data) {\r\n    // 重新定义属性\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]))\r\n  }\r\n  // 观测数组\r\n  observeArray(data) {\r\n    data.forEach((item) => observe(item))\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  observe(value) // 对所有的对象都进行劫持\r\n  let dep = new Dep() // 每个属性都有一个dep\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      if (Dep.target) {\r\n        dep.depend() // 让这个属性的收集器记住当前的watcher\r\n      }\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      if (newValue === value) return\r\n      observe(newValue) // 修改的值如果是对象，就重新进行劫持\r\n      value = newValue\r\n      dep.notify() //通知更新\r\n    },\r\n  })\r\n}\r\n\r\n// 对data这个对象进行劫持\r\nexport function observe(data) {\r\n  // console.log(data)\r\n\r\n  if (typeof data !== 'object' || data === null) {\r\n    return // 只对对象进行劫持\r\n  }\r\n\r\n  if (data.__ob__ instanceof Observer) {\r\n    // 说明这个对象被代理过了\r\n    return data.__ob__\r\n  }\r\n\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持了\r\n  // 要判断一个对象是否被劫持过，可以添加一个实例，用实例来判断是否被劫持欧\r\n\r\n  return new Observer(data)\r\n}\r\n","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n  if(opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, { // vm.name\r\n    get() {\r\n      return vm[target][key] // vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n  \r\n  vm._data = data\r\n  observe(data)\r\n\r\n  // 将vm._data用vm来代理，使data中的数据可以直接通过vm.propertyKey访问\r\n  for(let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n}","const attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n\r\n// 对模板进行编译处理\r\nexport function parseHTML(html) {\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3;\r\n    const stack = [] // 用于存放元素\r\n    let currentParant;  // 指向的是栈中的最后一个\r\n    let root;\r\n\r\n    // 最终需要转换成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    // 利用栈型结构来构造一颗树\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs) // 创造一个ast节点\r\n        if(!root) { // 看一下是否是空树\r\n            root = node\r\n        }\r\n        if(currentParant) {\r\n            node.parent = currentParant;\r\n            currentParant.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParant = node // currentParant为栈中的最后一个\r\n    }\r\n    function chars(text) { // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g, '') // 如果空格超过2，就删除2个以上的\r\n        text && currentParant.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParant\r\n        })\r\n    }\r\n    function end() {\r\n        let node = stack.pop() // 弹出最后一个，校验标签是否合法\r\n        currentParant = stack.at(-1)\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if(start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length)\r\n\r\n            // 如果不是开始标签的结束，就一直匹配下去\r\n            let attr, end;\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                match.attrs.push({name: attr[1], value: attr[3] || attr[4] || attr[5] || true})\r\n            }\r\n            if(end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        return false; // 不是开始标签\r\n    }\r\n    while(html) {\r\n        // 如果textEnd为0 说明是一个开始的标签或者结束标签\r\n        // 如果textEnd>0 说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<')\r\n\r\n        if(textEnd === 0) {\r\n            const startTagMatch = parseStartTag()\r\n            if(startTagMatch) { // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        if(textEnd > 0) {\r\n            let text = html.substring(0, textEnd) // 文本内容\r\n            if(text) {\r\n                chars(text)\r\n                advance(text.length) // 解析到的文本\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}","import { parseHTML } from './parse'\r\n\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for(let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if(attr.name === 'style') {\r\n      let obj = {};\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':');\r\n        obj[key] = value;\r\n      })\r\n    }\r\n\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nfunction gen(node) {\r\n  if(node.type === 1) {\r\n    return codegen(node);\r\n  }else {\r\n    let text = node.text\r\n    if(!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    }else {\r\n      let tokens = [];\r\n      let match;\r\n      defaultTagRE.lastIndex = 0;\r\n      let lastIndex = 0;\r\n      while(match = defaultTagRE.exec(text)) {\r\n        let index = match.index; // 匹配的位置 {{  name  }} hello {{  age }}\r\n        if(index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if(lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children)\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length > 0 ? genProps(ast.attrs) : null\r\n  }${\r\n    ast.children.length ? `,${children}` : ''\r\n  })`\r\n  return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    // 1.就是将template转换成ast语法树\r\n    let ast = parseHTML(template)\r\n    // 2.生成render方法（render方法执行后的返回就是虚拟dom）\r\n\r\n    // 模板引擎的实现原理 就是 with + new Function\r\n\r\n    let code = codegen(ast)\r\n    code = `with(this){return ${code}}`;\r\n    let render = new Function(code);\r\n\r\n    return render;\r\n}","/**\r\n * 每个组件里面都会有一个watcher，初始化时，只有一个watcher，用来渲染根实例\r\n * 组件的特点：复用、方便维护、局部更新\r\n * 要做到局部更新的一个关键点，就是要利用每个组件独立的watcher\r\n */\r\n\r\nimport Dep from './dep'\r\n\r\nlet id = 0\r\n\r\n// 一个watcher代表一个视图(组件)\r\n// 每个属性都有一个dep（属性就是被观察者），watcher就是观察者(属性变化了会通知观察者来更新)\r\n// 观察者模式\r\nclass Watcher {\r\n  constructor(vm, fn, option) {\r\n    this.id = id++\r\n    this.renderWatcher = option // 是一个渲染watcher\r\n    this.getter = fn\r\n    this.deps = [] // 后续我们实现计算属性，和一些清理工作(组件卸载)需要用到\r\n    this.depsId = new Set()\r\n    this.get()\r\n  }\r\n  // 一个组件对应多个属性，重复的不用记录\r\n  addDep(dep) {\r\n    let id = dep.id\r\n    if (!this.depsId.has(id)) {\r\n      this.deps.push(dep)\r\n      this.depsId.add(id)\r\n      dep.addSub(this) // watcher已经记住了dep，而且去重了，此时让dep也记住watcher\r\n    }\r\n  }\r\n\r\n  get() {\r\n    Dep.target = this\r\n    this.getter() // 会去vm上取值\r\n    Dep.target = null\r\n  }\r\n\r\n  update() {\r\n    queunWatcher(this)\r\n    // this.get()\r\n  }\r\n\r\n  run() {\r\n    this.get()\r\n  }\r\n}\r\n\r\nlet qunen = []\r\nlet has = {}\r\nlet pending = false\r\n\r\nfunction flushSchedulerQueue() {\r\n  let flushQueue = qunen.slice(0)\r\n  qunen = []\r\n  has = {}\r\n  pending = false\r\n  flushQueue.forEach((q) => q.run())\r\n}\r\n\r\nfunction queunWatcher(watcher) {\r\n  const id = watcher.id\r\n  if (!has[id]) {\r\n    qunen.push(watcher)\r\n    has[id] = true\r\n    // 不管update执行多少次，最终只执行一轮刷新操作\r\n    if (!pending) {\r\n      nextTick(flushSchedulerQueue, 0)\r\n      pending = false\r\n    }\r\n  }\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\nfunction flushCallbacks() {\r\n  let cbs = callbacks.slice(0)\r\n  waiting = false\r\n  callbacks = []\r\n  cbs.forEach((cb) => cb())\r\n}\r\n\r\n/**\r\n * nextTick没有直接使用某个api，而是采用优雅降级的方式\r\n * 内部先采用promise(ie不兼容)\r\n * MutationObserver(h5的api)\r\n * setImmediate(IE专享)\r\n * setTimeout\r\n */\r\nlet timerFunc\r\nif (Promise) {\r\n  timerFunc = () => {\r\n    Promise.resolve().then(flushCallbacks)\r\n  }\r\n} else if (MutationObserver) {\r\n  let observer = new MutationObserver()\r\n  let textNode = document.createTextNode(1)\r\n  observer.observe(textNode, {\r\n    characterData: true,\r\n  })\r\n  timerFunc = () => {\r\n    textNode.textContent = 2\r\n  }\r\n} else if (setImmediate) {\r\n  timerFunc = () => {\r\n    setImmediate(flushCallbacks)\r\n  }\r\n} else {\r\n  timerFunc = () => {\r\n    setTimeout(flushCallbacks)\r\n  }\r\n}\r\n\r\nexport function nextTick(cb) {\r\n  callbacks.push(cb) // 放到队列中执行是同步\r\n  if (!waiting) {\r\n    timerFunc() // 刷新的时候是异步\r\n    waiting = true\r\n  }\r\n}\r\n\r\nexport default Watcher\r\n","export function createElementVNode(vm, tag, data = {}, ...children) {\r\n  data = data == null ? {} : data\r\n  let key = data.key\r\n  if (key) {\r\n    delete data.key\r\n  }\r\n  return vnode(vm, tag, key, data, children)\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n// ast做的是语法层面的转换，它描述的是语法本身\r\n// 虚拟DOM，描述的是dom元素，可以增加自定义属性\r\nexport function vnode(vm, tag, key, props, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    props,\r\n    children,\r\n    text,\r\n  }\r\n}\r\n","/**\r\n * vue核心流程：\r\n *  1.创造了响应式数据 initState（针对对象来说主要是增加了defineProperty，针对数组就是重写方法）\r\n *  2.将模板转换成ast语法树\r\n *  3.将ast语法树转换成了render函数\r\n *    --- 每次重新渲染都会用正则替换，消耗性能比较大，所以就将ast语法树转换成render函数\r\n *  4.后续每次数据更新可以只执行render函数，无需再次执行ast转换的过程\r\n *  5.render函数会去产生虚拟节点（使用响应式数据）\r\n *    --- 每次更新，就会调用render函数 render(){_c('div', null, _v(name))}\r\n *  6.根据生成的虚拟节点创造真实的DOM\r\n */\r\n\r\nimport Watcher from './observe/watcher'\r\nimport { createElementVNode, createTextVNode } from './vnode/index'\r\n\r\nfunction createElm(vnode) {\r\n  let { tag, data, children, text } = vnode\r\n  if (typeof tag === 'string') {\r\n    // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了，会进行diff对比\r\n    vnode.el = document.createElement(tag)\r\n    patchProps(vnode.el, data)\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElm(child))\r\n    })\r\n  } else {\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n  return vnode.el\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n  for (let key in props) {\r\n    if (key === 'style') {\r\n      // style{color: \"red\"}\r\n      for (let styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName]\r\n      }\r\n    } else {\r\n      el.setAttribute(key, props[key])\r\n    }\r\n  }\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n  // 初步渲染流程\r\n  const isRealElement = oldVNode.nodeType\r\n  if (isRealElement) {\r\n    const elm = oldVNode // 获取真实元素\r\n    const parentElm = elm.parentNode // 拿到父元素\r\n    let newElm = createElm(vnode)\r\n    parentElm.insertBefore(newElm, elm.nextSibling)\r\n    parentElm.removeChild(elm)\r\n    return newElm\r\n  }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n  // 将虚拟dom(vnode)转换成真实dom\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this\r\n    const el = this.$el\r\n    console.log('_update', vnode, el)\r\n    // patch既有初始化的功能，又有更新的功能\r\n    vm.$el = patch(el, vnode)\r\n  }\r\n\r\n  Vue.prototype._c = function () {\r\n    return createElementVNode(this, ...arguments)\r\n  }\r\n\r\n  Vue.prototype._v = function () {\r\n    return createTextVNode(this, ...arguments)\r\n  }\r\n\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value !== 'object') return value\r\n    return JSON.stringify(value)\r\n  }\r\n  Vue.prototype._render = function () {\r\n    // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\r\n    return this.$options.render.call(this) // 通过ast语法转义\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  vm.$el = el\r\n  // 1.调用render方法产生虚拟节点 虚拟DOM\r\n  const updateComponent = () => {\r\n    vm._update(vm._render()) // vm.$option.render() 虚拟节点\r\n  }\r\n\r\n  const watcher = new Watcher(vm, updateComponent, true) // true用来标识是一个渲染watcher\r\n  console.log(watcher)\r\n\r\n  // 2.根据虚拟DOM产生真实DOM\r\n\r\n  // 3.插入到el元素中\r\n}\r\n","import { initState } from './state'\r\nimport { compileToFunction } from './compiler/index'\r\nimport { mountComponent } from './lifecycle'\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this\r\n    // vm.$options 就是获取用户的配置\r\n    vm.$options = options // 将用户的选项挂载到实例上\r\n\r\n    initState(vm)\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el)\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    el = document.querySelector(el)\r\n    let opts = vm.$options\r\n    if (!opts.render) {\r\n      // 先进行查找有没有render函数\r\n      let template // 没有render看一下是否写了template，\r\n      // 没有写模板，但是写了el\r\n      if (!opts.template && el) {\r\n        template = el.outerHTML\r\n      } else {\r\n        if (el) {\r\n          // 如果有el，就采用模板的内容\r\n          template = opts.template\r\n        }\r\n      }\r\n      if (template) {\r\n        // 这里需要对模板进行编译\r\n        const render = compileToFunction(template)\r\n        opts.render = render // jsx最终会被编译成h('xxx')\r\n      }\r\n    }\r\n    mountComponent(vm, el) // 组件的挂载\r\n\r\n    // script标签引用的vue.global.js这个编译过程是在浏览器运行的\r\n    // runtime是不包括模板编译的，整个编译是打包的时候通过loader来转移.vue文件的\r\n    // 用runtime的时候不能使用template\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\nimport { initLifeCycle } from './lifecycle'\r\nimport { nextTick } from './observe/watcher'\r\n\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\n\r\nVue.prototype.$nextTick = nextTick\r\ninitMixin(Vue)\r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue\r\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","console","log","inserted","ob","__ob__","slice","observeArray","id","Dep","subs","target","addDep","watcher","push","update","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","dep","get","depend","set","newValue","notify","initState","vm","opts","$options","initData","proxy","_data","attribute","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParant","root","createASTElement","tag","attrs","type","children","parent","start","node","chars","text","replace","end","pop","at","advance","n","substring","parseStartTag","match","tagName","length","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","split","JSON","stringify","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","Watcher","fn","option","renderWatcher","getter","deps","depsId","Set","has","add","addSub","queunWatcher","qunen","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","createElementVNode","vnode","createTextVNode","undefined","props","createElm","el","createElement","patchProps","appendChild","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","_update","$el","_c","arguments","_v","_s","_render","mountComponent","updateComponent","initMixin","_init","options","$mount","querySelector","outerHTML","$nextTick"],"mappings":"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"}