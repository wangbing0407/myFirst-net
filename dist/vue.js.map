{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["\r\nlet oldArrayProto = Array.prototype\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n\r\nmethods.forEach(method =>{\r\n  newArrayProto[method] = function(...args) { // 这里重写了数组的方法\r\n    // 内部调用原来的方法\r\n    const result =  oldArrayProto[method].call(this, ...args)\r\n    console.log('arrayMethos', method)\r\n\r\n    // 我们需要对新增的数据再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice': \r\n        inserted = args.slice(2)\r\n      default:\r\n        break;\r\n    }\r\n\r\n    console.log('数组新增的内容', inserted)\r\n    // 如果数组新增的数据是对象类型，那么就重新进行劫持\r\n    if(inserted) {\r\n      ob.observeArray(inserted)\r\n    }\r\n\r\n    return result\r\n  }\r\n})","import { newArrayProto } from './array'\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    // Object.defineProperty只能劫持已经存在的属性，新增删除的属性并不能劫持到\r\n    // 对此，vue2里面会单独进行处理 $set $delete\r\n\r\n    data.__ob__ = this; // 给数据加了一个标识，如果数据上有__ob__，则说明这个属性被观测过\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false // 将 __ob__ 变成不可枚举（循环的时候无法获取到）\r\n    })\r\n    if(Array.isArray(data)) {\r\n      data.__proto__ = newArrayProto\r\n      this.observeArray(data) // 如果数组中放的是对象，可以监控到对象的变化\r\n    }else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n\r\n  // 循环对象，对属性依此进行劫持\r\n  walk(data) {\r\n    // 重新定义属性\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n  // 观测数组\r\n  observeArray(data) {\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  observe(value) // 对所有的对象都进行劫持\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      console.log('key', key)\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      if(newValue === value) return\r\n      observe(newValue) // 修改的值如果是对象，就重新进行劫持\r\n      value = newValue\r\n    }\r\n  })\r\n}\r\n\r\n// 对data这个对象进行劫持\r\nexport function observe(data) {\r\n  // console.log(data)\r\n\r\n  if(typeof data !== 'object' || data === null) {\r\n    return // 只对对象进行劫持\r\n  }\r\n\r\n  if(data.__ob__ instanceof Observer) { // 说明这个对象被代理过了\r\n    return data.__ob__\r\n  }\r\n\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持了\r\n  // 要判断一个对象是否被劫持过，可以添加一个实例，用实例来判断是否被劫持欧\r\n\r\n  return new Observer(data)\r\n}","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n  if(opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, { // vm.name\r\n    get() {\r\n      return vm[target][key] // vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n  \r\n  vm._data = data\r\n  observe(data)\r\n\r\n  // 将vm._data用vm来代理，使data中的数据可以直接通过vm.propertyKey访问\r\n  for(let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n}","const attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n\r\n// 对模板进行编译处理\r\nfunction parseHTML(html) {\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3;\r\n    const stack = [] // 用于存放元素\r\n    let currentParant;  // 指向的是栈中的最后一个\r\n    let root;\r\n\r\n    // 最终需要转换成一颗抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    // 利用栈型结构来构造一颗树\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs) // 创造一个ast节点\r\n        if(!root) { // 看一下是否是空树\r\n            root = node\r\n        }\r\n        if(currentParant) {\r\n            node.parent = currentParant;\r\n            currentParant.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParant = node // currentParant为栈中的最后一个\r\n    }\r\n    function chars(text) { // 文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g, '') // 如果空格超过2，就删除2个以上的\r\n        text && currentParant.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParant\r\n        })\r\n    }\r\n    function end() {\r\n        let node = stack.pop() // 弹出最后一个，校验标签是否合法\r\n        currentParant = stack.at(-1)\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if(start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length)\r\n\r\n            // 如果不是开始标签的结束，就一直匹配下去\r\n            let attr, end;\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                match.attrs.push({name: attr[1], value: attr[3] || attr[4] || attr[5] || true})\r\n            }\r\n            if(end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        return false; // 不是开始标签\r\n    }\r\n    while(html) {\r\n        // 如果textEnd为0 说明是一个开始的标签或者结束标签\r\n        // 如果textEnd>0 说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<')\r\n\r\n        if(textEnd === 0) {\r\n            const startTagMatch = parseStartTag()\r\n            if(startTagMatch) { // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        if(textEnd > 0) {\r\n            let text = html.substring(0, textEnd) // 文本内容\r\n            if(text) {\r\n                chars(text)\r\n                advance(text.length) // 解析到的文本\r\n            }\r\n        }\r\n    }\r\n    console.log(root)\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    // 1.就是将template转换成ast语法树\r\n    // 2.生成render方法（render方法执行后的返回就是虚拟dom）\r\n    // console.log(template)\r\n    parseHTML(template)\r\n}","import {initState} from './state'\r\nimport {compileToFunction} from './compiler/index'\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function(options) {\r\n    const vm = this;\r\n    // vm.$options 就是获取用户的配置\r\n    vm.$options = options // 将用户的选项挂载到实例上\r\n\r\n    initState(vm)\r\n\r\n    if(options.el) {\r\n      vm.$mount(options.el)\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function(el) {\r\n    const vm = this;\r\n    el = document.querySelector(el);\r\n    let opts = vm.$options\r\n    if(!opts.render) { // 先进行查找有没有render函数\r\n      let template // 没有render看一下是否写了template，\r\n      // 没有写模板，但是写了el\r\n      if(!opts.template && el) {\r\n        template = el.outerHTML\r\n      }else {\r\n        if(el) { // 如果有el，就采用模板的内容\r\n          template = opts.template\r\n        }\r\n      }\r\n      if(template) {\r\n        // 这里需要对模板进行编译\r\n        const render = compileToFunction(template)\r\n        opts.render = render  // jsx最终会被编译成h('xxx')\r\n      }\r\n    }\r\n    opts.render\r\n\r\n    // script标签引用的vue.global.js这个编译过程是在浏览器运行的\r\n    // runtime是不包括模板编译的，整个编译是打包的时候通过loader来转移.vue文件的\r\n    // 用runtime的时候不能使用template\r\n  }\r\n}\r\n","import {initMixin} from './init'\r\n\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\n\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","console","log","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","attribute","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParant","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","at","advance","n","substring","parseStartTag","match","tagName","length","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}